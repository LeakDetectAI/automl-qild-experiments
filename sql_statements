create sequence mutual_information.avail_jobs_job_id_seq;
alter sequence mutual_information.avail_jobs_job_id_seq owner to autoscaadmin;

create table mutual_information.avail_jobs
(
    job_id             integer default nextval('mutual_information.avail_jobs_job_id_seq'::regclass) not null
        constraint avail_jobs_pk
            primary key,
    fold_id            integer                                                                   not null,
    dataset            text                                                                      not null,
    learner            text                                                                      not null,
    experiment_schema  text                                                                      not null,
    experiment_table   text,
    dataset_params     json,
    fit_params         json,
    learner_params     json,
    hp_ranges          json,
    hp_iters           integer default 50,
    is_gpu             boolean default false                                                     not null,
    seed               integer default 123,
    inner_folds        integer default 3                                                         not null,
    duration           text,
    learning_problem   text,
    validation_loss    text,
    hash_value         text    default ''::text,
    job_allocated_time timestamp,
    job_end_time       timestamp,
    evaluation_time double precision
);

alter table mutual_information.avail_jobs owner to autoscaadmin;

create sequence mutual_information.running_jobs_running_id_seq;

alter sequence mutual_information.running_jobs_running_id_seq owner to autoscaadmin;

ALTER SEQUENCE mutual_information.avail_jobs_job_id_seq RESTART WITH 5;


create table mutual_information.running_jobs
(
    running_id    integer default nextval('mutual_information.running_jobs_running_id_seq'::regclass) not null,
    job_id        integer                                                                         not null
        primary key,
    cluster_id    integer                                                                         not null,
    finished      boolean default false                                                           not null,
    interrupted   boolean default false                                                           not null,
    error_history text    default 'NA'::text
);

alter table mutual_information.running_jobs  owner to autoscaadmin;

create unique index running_jobs_running_id_idx on mutual_information.running_jobs (running_id);

create table results.classification
(
    job_id                        integer not null primary key,
    cluster_id                    integer not null,
    f1score                       double precision,
    accuracy                      double precision,
    aucscore                      double precision,
    mathewscorrelationcoefficient double precision,
    informedness                  double precision,
    tp                            double precision,
    tn                            double precision,
    fp                            double precision,
    fn                            double precision,
    santhivardyupperbound         double precision,
    hellmanravivupperbound        double precision,
    fanoslowerbound               double precision,
    fanosAdjustedlowerbound        double precision,
    estimatedmutualinformationscore double precision
);

alter table results.classification
    owner to autoscaadmin;
alter table results.classification drop column tp, drop column tn, drop column fp, drop column fn;
alter table results.mutual_information drop column tp, drop column tn, drop column fp, drop column fn;

create table results.mutual_information
(
    job_id                        integer not null primary key,
    cluster_id                    integer not null,
    estimatedmutualinformation    double precision,
    estimatedmutualinformationscore double precision,
    f1score                       double precision,
    accuracy                      double precision,
    aucscore                      double precision,
    mathewscorrelationcoefficient double precision,
    informedness                  double precision,
    santhivardyupperbound         double precision,
    hellmanravivupperbound        double precision,
    fanoslowerbound               double precision,
    fanosAdjustedlowerbound        double precision
);

alter table mutual_information.avail_jobs add column evaluation_time double precision;
alter table classification.avail_jobs add column evaluation_time double precision;

rm logs/* optimizers/* results/*