create sequence leakage_detection.avail_jobs_job_id_seq;

alter sequence leakage_detection.avail_jobs_job_id_seq owner to autoscaadmin;

CREATE TABLE leakage_detection.avail_jobs (
    job_id             integer          DEFAULT nextval('leakage_detection.avail_jobs_job_id_seq'::regclass) NOT NULL,
    fold_id            integer       NOT NULL,
    dataset_name       text          NOT NULL,
    dataset_params     json,
    base_learner       text             NOT NULL,
    detector_method    text             NOT NULL,
    fit_params         json,
    learner_params     json,
    hp_ranges          json,
    hp_iters           integer          DEFAULT 50,
    inner_folds        integer          DEFAULT 3,
    validation_loss    text,
    cv_iterations      integer          DEFAULT 10,
    n_hypothesis       integer          DEFAULT 10,
    learning_problem   text             NOT NULL,
    experiment_schema  text             NOT NULL,
    experiment_table   text,
    seed               integer          DEFAULT 123,
    is_gpu             boolean default false                                                     not null,
    hash_value         text             DEFAULT ''::text,
    duration           text,
    job_allocated_time timestamp,
    job_end_time       timestamp,
    evaluation_time    double precision DEFAULT 0,
    CONSTRAINT avail_jobs_pk PRIMARY KEY (job_id)
);


alter table leakage_detection.avail_jobs owner to autoscaadmin;

create sequence leakage_detection.running_jobs_running_id_seq;

alter sequence leakage_detection.running_jobs_running_id_seq owner to autoscaadmin;

CREATE TABLE leakage_detection.running_jobs (
    running_id    integer  DEFAULT nextval('leakage_detection.running_jobs_running_id_seq'::regclass) NOT NULL,
    job_id        integer  NOT NULL,
    cluster_id    integer  NOT NULL,
    finished      boolean  DEFAULT false NOT NULL,
    interrupted   boolean  DEFAULT false NOT NULL,
    error_history text     DEFAULT 'NA'::text,
    PRIMARY KEY (job_id)
);


alter table leakage_detection.running_jobs owner to autoscaadmin;

create unique index running_jobs_running_id_idx on leakage_detection.running_jobs (running_id);


create table results.leakage_detection
(
    job_id integer not null
        primary key,
    cluster_id                      integer not null,
    fold_id                         integer not null,
    imbalance                       double precision,
    delay                           double precision,
    f1score                         double precision,
    accuracy                        double precision,
    mathewscorrelationcoefficient   double precision,
    balancedaccuracy                double precision,
    falsepositiverate               double precision,
    falsenegativerate               double precision,
    hypothesis                      json

);

alter table results.leakage_detection owner to autoscaadmin;

alter sequence leakage_detection.avail_jobs_job_id_seq restart with 16;
alter sequence leakage_detection.avail_jobs_job_id_seq restart with 16;
DELETE from leakage_detection.avail_jobs where job_id>=16;

DELETE from leakage_detection.running_jobs where True;
alter sequence leakage_detection.running_jobs_running_id_seq restart with 1;

